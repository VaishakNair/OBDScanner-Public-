plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'

    // TODO Remove when view binding is not needed in GaugeTypePickerFragment
    id 'kotlin-android'
//    id 'kotlin-android-extensions'
    id 'kotlin-parcelize'
}

android {
    namespace 'in.v89bhp.obdscanner'
    compileSdk 34


    buildFeatures {
        buildConfig true
        viewBinding true
        dataBinding true

    }

//    dataBinding {
//        enabled = true
//    }

    defaultConfig {
        applicationId "in.v89bhp.obdscanner"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.compileSdkVersion
        versionCode 2
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {

        debug {
            buildConfigField("String", "APP_NAME", "\"89bhp\"")
        }

        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type. Make sure to use a build
            // variant with `isDebuggable=false`.
            minifyEnabled = true


            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources = true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )

            buildConfigField("String", "APP_NAME", "\"89bhp\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.7'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.runtime:runtime"
//    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui:1.4.3'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.compose.material3:material3:1.0.1"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "com.google.accompanist:accompanist-permissions:0.31.2-alpha"

    // SpeedView Gauges
    implementation project(':speedview')

    // Preference
    implementation "androidx.preference:preference:$rootProject.preferenceVersion"

    // Android view binding (For including settings fragment inside a composable:
    implementation "androidx.compose.ui:ui-viewbinding:1.4.3"

    // Old Android material library for GaugeSettingsDialogFragment TODO To be removed when compose UI is implemented:
    implementation "com.google.android.material:material:1.2.0-alpha03"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"

    // Compose constraint layout:
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    // Compose live data interoperability:
    implementation "androidx.compose.runtime:runtime-livedata:1.4.3"

    // System UI Controller:
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.7.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    // Room database:
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"


    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}